name: 'Setup Ubuntu Packages'
description: 'Configure Ubuntu mirrors and install packages for faster, reliable CI builds'
branding:
  icon: 'download'
  color: 'orange'
inputs:
  enable_mirrors:
    description: 'Enable mirror configuration for faster downloads'
    required: false
    default: 'true'
  mirror_url:
    description: 'Primary mirror URL (e.g., https://mirror.init7.net/ubuntu/)'
    required: false
    default: 'https://mirror.init7.net/ubuntu/'
  backup_mirrors:
    description: 'Backup mirror URLs (comma-separated)'
    required: false
    default: 'https://mirror.math.princeton.edu/pub/ubuntu/,https://ftp.halifax.rwth-aachen.de/ubuntu/,https://mirrors.kernel.org/ubuntu/'
  packages:
    description: 'List of packages to install (YAML list or space-separated string)'
    required: false
    default: |
      - git
      - curl
  extra_packages:
    description: 'Additional packages to install (YAML list or space-separated string)'
    required: false
    default: ''
  update_cache:
    description: 'Run apt-get update before package installation'
    required: false
    default: 'true'
  ubuntu_version:
    description: 'Ubuntu version codename (auto-detected if empty)'
    required: false
    default: ''
  retry_count:
    description: 'Number of retry attempts for package installation'
    required: false
    default: '2'
  cache_timeout:
    description: 'Timeout in seconds for package operations'
    required: false
    default: '120'

outputs:
  mirror_configured:
    description: 'Whether mirrors were configured successfully'
    value: ${{ steps.run-script.outputs.configured }}
  packages_installed:
    description: 'List of successfully installed packages'
    value: ${{ steps.run-script.outputs.installed }}
  ubuntu_codename:
    description: 'Detected Ubuntu codename'
    value: ${{ steps.run-script.outputs.codename }}

runs:
  using: "composite"
  steps:
    - name: Run setup-ubuntu-packages script
      id: run-script
      shell: bash
      env:
        ENABLE_MIRRORS: ${{ inputs.enable_mirrors }}
        MIRROR_URL: ${{ inputs.mirror_url }}
        BACKUP_MIRRORS: ${{ inputs.backup_mirrors }}
        PACKAGES: ${{ inputs.packages }}
        EXTRA_PACKAGES: ${{ inputs.extra_packages }}
        UPDATE_CACHE: ${{ inputs.update_cache }}
        UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        RETRY_COUNT: ${{ inputs.retry_count }}
        CACHE_TIMEOUT: ${{ inputs.cache_timeout }}
      run: |
        set -euo pipefail
        
        # Debug logging
        echo "=== Setup Ubuntu Packages Action ==="
        echo "GitHub Action Path: ${{ github.action_path }}"
        echo "Current Directory: $(pwd)"
        echo "Action Repository: ${{ github.action_repository }}"
        
        # List directory structure for debugging
        echo ""
        echo "=== Directory Structure ==="
        ls -la "${{ github.action_path }}" || echo "Failed to list action path"
        
        # Normalize package lists to space-separated strings
        # Remove YAML list markers (-) and convert newlines to spaces
        export PACKAGES="$(echo "${PACKAGES}" | sed 's/^[[:space:]]*-[[:space:]]*//' | tr '\n' ' ')"
        export EXTRA_PACKAGES="$(echo "${EXTRA_PACKAGES}" | sed 's/^[[:space:]]*-[[:space:]]*//' | tr '\n' ' ')"
        
        echo ""
        echo "=== Package Configuration ==="
        echo "Packages: ${PACKAGES}"
        echo "Extra Packages: ${EXTRA_PACKAGES}"
        
        # Auto-discover the script using find
        echo ""
        echo "=== Searching for setup-ubuntu-packages.sh ==="
        
        # Search for the script in the action path and its subdirectories
        SCRIPT_PATH=$(find "${{ github.action_path }}" -name "setup-ubuntu-packages.sh" -type f 2>/dev/null | head -1)
        
        if [ -z "$SCRIPT_PATH" ]; then
          echo "ERROR: Could not find setup-ubuntu-packages.sh"
          echo ""
          echo "Searched in: ${{ github.action_path }}"
          echo ""
          echo "Full directory tree:"
          find "${{ github.action_path }}" -type f -name "*.sh" 2>/dev/null || echo "No .sh files found"
          echo ""
          echo "All files in action path:"
          find "${{ github.action_path }}" -type f 2>/dev/null || echo "No files found"
          exit 1
        fi
        
        echo "Found script at: $SCRIPT_PATH"
        
        # Make script executable
        echo ""
        echo "=== Making script executable ==="
        chmod +x "$SCRIPT_PATH"
        ls -la "$SCRIPT_PATH"
        
        # Run the script
        echo ""
        echo "=== Executing Script ==="
        echo "Command: $SCRIPT_PATH"
        "$SCRIPT_PATH"